// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pb/port/pb.proto

package port

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type PortDomainServiceErrorCode int32

const (
	PortDomainServiceErrorCode_Unknown        PortDomainServiceErrorCode = 0
	PortDomainServiceErrorCode_Internal       PortDomainServiceErrorCode = 5000
	PortDomainServiceErrorCode_InvalidRequest PortDomainServiceErrorCode = 4000
)

var PortDomainServiceErrorCode_name = map[int32]string{
	0:    "Unknown",
	5000: "Internal",
	4000: "InvalidRequest",
}

var PortDomainServiceErrorCode_value = map[string]int32{
	"Unknown":        0,
	"Internal":       5000,
	"InvalidRequest": 4000,
}

func (x PortDomainServiceErrorCode) String() string {
	return proto.EnumName(PortDomainServiceErrorCode_name, int32(x))
}

func (PortDomainServiceErrorCode) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{0}
}

type SavePortRequest struct {
	Item                 *Port    `protobuf:"bytes,1,opt,name=Item,proto3" json:"Item,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePortRequest) Reset()         { *m = SavePortRequest{} }
func (m *SavePortRequest) String() string { return proto.CompactTextString(m) }
func (*SavePortRequest) ProtoMessage()    {}
func (*SavePortRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{0}
}

func (m *SavePortRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePortRequest.Unmarshal(m, b)
}
func (m *SavePortRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePortRequest.Marshal(b, m, deterministic)
}
func (m *SavePortRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePortRequest.Merge(m, src)
}
func (m *SavePortRequest) XXX_Size() int {
	return xxx_messageInfo_SavePortRequest.Size(m)
}
func (m *SavePortRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePortRequest.DiscardUnknown(m)
}

var xxx_messageInfo_SavePortRequest proto.InternalMessageInfo

func (m *SavePortRequest) GetItem() *Port {
	if m != nil {
		return m.Item
	}
	return nil
}

type SavePortResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SavePortResponse) Reset()         { *m = SavePortResponse{} }
func (m *SavePortResponse) String() string { return proto.CompactTextString(m) }
func (*SavePortResponse) ProtoMessage()    {}
func (*SavePortResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{1}
}

func (m *SavePortResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SavePortResponse.Unmarshal(m, b)
}
func (m *SavePortResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SavePortResponse.Marshal(b, m, deterministic)
}
func (m *SavePortResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SavePortResponse.Merge(m, src)
}
func (m *SavePortResponse) XXX_Size() int {
	return xxx_messageInfo_SavePortResponse.Size(m)
}
func (m *SavePortResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_SavePortResponse.DiscardUnknown(m)
}

var xxx_messageInfo_SavePortResponse proto.InternalMessageInfo

type GetPortsRequest struct {
	Page                 int64    `protobuf:"varint,1,opt,name=Page,proto3" json:"Page,omitempty"`
	Limit                int64    `protobuf:"varint,2,opt,name=Limit,proto3" json:"Limit,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortsRequest) Reset()         { *m = GetPortsRequest{} }
func (m *GetPortsRequest) String() string { return proto.CompactTextString(m) }
func (*GetPortsRequest) ProtoMessage()    {}
func (*GetPortsRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{2}
}

func (m *GetPortsRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortsRequest.Unmarshal(m, b)
}
func (m *GetPortsRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortsRequest.Marshal(b, m, deterministic)
}
func (m *GetPortsRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortsRequest.Merge(m, src)
}
func (m *GetPortsRequest) XXX_Size() int {
	return xxx_messageInfo_GetPortsRequest.Size(m)
}
func (m *GetPortsRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortsRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortsRequest proto.InternalMessageInfo

func (m *GetPortsRequest) GetPage() int64 {
	if m != nil {
		return m.Page
	}
	return 0
}

func (m *GetPortsRequest) GetLimit() int64 {
	if m != nil {
		return m.Limit
	}
	return 0
}

type GetPortsResponse struct {
	Items                []*Port  `protobuf:"bytes,1,rep,name=Items,proto3" json:"Items,omitempty"`
	Total                int64    `protobuf:"varint,2,opt,name=Total,proto3" json:"Total,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetPortsResponse) Reset()         { *m = GetPortsResponse{} }
func (m *GetPortsResponse) String() string { return proto.CompactTextString(m) }
func (*GetPortsResponse) ProtoMessage()    {}
func (*GetPortsResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{3}
}

func (m *GetPortsResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetPortsResponse.Unmarshal(m, b)
}
func (m *GetPortsResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetPortsResponse.Marshal(b, m, deterministic)
}
func (m *GetPortsResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetPortsResponse.Merge(m, src)
}
func (m *GetPortsResponse) XXX_Size() int {
	return xxx_messageInfo_GetPortsResponse.Size(m)
}
func (m *GetPortsResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetPortsResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetPortsResponse proto.InternalMessageInfo

func (m *GetPortsResponse) GetItems() []*Port {
	if m != nil {
		return m.Items
	}
	return nil
}

func (m *GetPortsResponse) GetTotal() int64 {
	if m != nil {
		return m.Total
	}
	return 0
}

type Port struct {
	PortID               string    `protobuf:"bytes,1,opt,name=PortID,proto3" json:"PortID,omitempty"`
	Name                 string    `protobuf:"bytes,2,opt,name=Name,proto3" json:"Name,omitempty"`
	Code                 string    `protobuf:"bytes,3,opt,name=Code,proto3" json:"Code,omitempty"`
	Alias                []string  `protobuf:"bytes,4,rep,name=Alias,proto3" json:"Alias,omitempty"`
	Unlocs               []string  `protobuf:"bytes,5,rep,name=Unlocs,proto3" json:"Unlocs,omitempty"`
	Country              string    `protobuf:"bytes,6,opt,name=Country,proto3" json:"Country,omitempty"`
	Regions              []string  `protobuf:"bytes,7,rep,name=Regions,proto3" json:"Regions,omitempty"`
	Province             string    `protobuf:"bytes,8,opt,name=Province,proto3" json:"Province,omitempty"`
	City                 string    `protobuf:"bytes,9,opt,name=City,proto3" json:"City,omitempty"`
	Coordinates          []float32 `protobuf:"fixed32,10,rep,packed,name=Coordinates,proto3" json:"Coordinates,omitempty"`
	Timezone             string    `protobuf:"bytes,11,opt,name=Timezone,proto3" json:"Timezone,omitempty"`
	XXX_NoUnkeyedLiteral struct{}  `json:"-"`
	XXX_unrecognized     []byte    `json:"-"`
	XXX_sizecache        int32     `json:"-"`
}

func (m *Port) Reset()         { *m = Port{} }
func (m *Port) String() string { return proto.CompactTextString(m) }
func (*Port) ProtoMessage()    {}
func (*Port) Descriptor() ([]byte, []int) {
	return fileDescriptor_88004274c8d0ae2b, []int{4}
}

func (m *Port) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Port.Unmarshal(m, b)
}
func (m *Port) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Port.Marshal(b, m, deterministic)
}
func (m *Port) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Port.Merge(m, src)
}
func (m *Port) XXX_Size() int {
	return xxx_messageInfo_Port.Size(m)
}
func (m *Port) XXX_DiscardUnknown() {
	xxx_messageInfo_Port.DiscardUnknown(m)
}

var xxx_messageInfo_Port proto.InternalMessageInfo

func (m *Port) GetPortID() string {
	if m != nil {
		return m.PortID
	}
	return ""
}

func (m *Port) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *Port) GetCode() string {
	if m != nil {
		return m.Code
	}
	return ""
}

func (m *Port) GetAlias() []string {
	if m != nil {
		return m.Alias
	}
	return nil
}

func (m *Port) GetUnlocs() []string {
	if m != nil {
		return m.Unlocs
	}
	return nil
}

func (m *Port) GetCountry() string {
	if m != nil {
		return m.Country
	}
	return ""
}

func (m *Port) GetRegions() []string {
	if m != nil {
		return m.Regions
	}
	return nil
}

func (m *Port) GetProvince() string {
	if m != nil {
		return m.Province
	}
	return ""
}

func (m *Port) GetCity() string {
	if m != nil {
		return m.City
	}
	return ""
}

func (m *Port) GetCoordinates() []float32 {
	if m != nil {
		return m.Coordinates
	}
	return nil
}

func (m *Port) GetTimezone() string {
	if m != nil {
		return m.Timezone
	}
	return ""
}

func init() {
	proto.RegisterEnum("port.PortDomainServiceErrorCode", PortDomainServiceErrorCode_name, PortDomainServiceErrorCode_value)
	proto.RegisterType((*SavePortRequest)(nil), "port.SavePortRequest")
	proto.RegisterType((*SavePortResponse)(nil), "port.SavePortResponse")
	proto.RegisterType((*GetPortsRequest)(nil), "port.GetPortsRequest")
	proto.RegisterType((*GetPortsResponse)(nil), "port.GetPortsResponse")
	proto.RegisterType((*Port)(nil), "port.Port")
}

func init() { proto.RegisterFile("pb/port/pb.proto", fileDescriptor_88004274c8d0ae2b) }

var fileDescriptor_88004274c8d0ae2b = []byte{
	// 429 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x92, 0x4f, 0x6f, 0xd3, 0x30,
	0x18, 0xc6, 0xdb, 0x26, 0xfd, 0xf7, 0x56, 0xb0, 0x60, 0x60, 0xb2, 0x7a, 0x80, 0x28, 0x17, 0x2a,
	0x0e, 0x9d, 0x18, 0xc7, 0x9d, 0x50, 0x87, 0x50, 0x10, 0xa0, 0x2a, 0xdb, 0x3e, 0x80, 0xdb, 0xbe,
	0x9a, 0x2c, 0x12, 0xbf, 0xc1, 0xf6, 0x82, 0xca, 0x27, 0xe0, 0xc2, 0x95, 0x33, 0x1f, 0x15, 0xd9,
	0x89, 0x19, 0xca, 0x4e, 0xf1, 0xf3, 0xd8, 0xcf, 0x2f, 0x6f, 0xe2, 0x07, 0x92, 0x7a, 0x77, 0x56,
	0x93, 0xb6, 0x67, 0xf5, 0x6e, 0x5d, 0x6b, 0xb2, 0xc4, 0x62, 0x27, 0xb3, 0x37, 0x70, 0x72, 0x25,
	0x1a, 0xdc, 0x92, 0xb6, 0x05, 0x7e, 0xbb, 0x43, 0x63, 0xd9, 0x0b, 0x88, 0x73, 0x8b, 0x15, 0x1f,
	0xa6, 0xc3, 0xd5, 0xe2, 0x1c, 0xd6, 0xee, 0xdc, 0xda, 0x1f, 0xf0, 0x7e, 0xc6, 0x20, 0xb9, 0x8f,
	0x98, 0x9a, 0x94, 0xc1, 0xec, 0x02, 0x4e, 0x3e, 0xa0, 0x75, 0x96, 0x09, 0x18, 0x06, 0xf1, 0x56,
	0xdc, 0xa2, 0xc7, 0x44, 0x85, 0x5f, 0xb3, 0x67, 0x30, 0xfe, 0x24, 0x2b, 0x69, 0xf9, 0xc8, 0x9b,
	0xad, 0xc8, 0x3e, 0x42, 0x72, 0x1f, 0x6e, 0x81, 0x2c, 0x85, 0xb1, 0x7b, 0x99, 0xe1, 0xc3, 0x34,
	0xea, 0x4d, 0xd1, 0x6e, 0x38, 0xd6, 0x35, 0x59, 0x51, 0x06, 0x96, 0x17, 0xd9, 0xef, 0x11, 0xc4,
	0xee, 0x14, 0x3b, 0x85, 0x89, 0x7b, 0xe6, 0x97, 0x7e, 0x80, 0x79, 0xd1, 0x29, 0x37, 0xd6, 0x17,
	0x51, 0xa1, 0x4f, 0xcd, 0x0b, 0xbf, 0x76, 0xde, 0x86, 0x0e, 0xc8, 0xa3, 0xd6, 0x73, 0x6b, 0x87,
	0x7f, 0x57, 0x4a, 0x61, 0x78, 0x9c, 0x46, 0xab, 0x79, 0xd1, 0x0a, 0x47, 0xbd, 0x51, 0x25, 0xed,
	0x0d, 0x1f, 0x7b, 0xbb, 0x53, 0x8c, 0xc3, 0x74, 0x43, 0x77, 0xca, 0xea, 0x23, 0x9f, 0x78, 0x48,
	0x90, 0x6e, 0xa7, 0xc0, 0x5b, 0x49, 0xca, 0xf0, 0xa9, 0x8f, 0x04, 0xc9, 0x96, 0x30, 0xdb, 0x6a,
	0x6a, 0xa4, 0xda, 0x23, 0x9f, 0xf9, 0xd0, 0x3f, 0xed, 0x27, 0x92, 0xf6, 0xc8, 0xe7, 0xdd, 0x44,
	0xd2, 0x1e, 0x59, 0x0a, 0x8b, 0x0d, 0x91, 0x3e, 0x48, 0x25, 0x2c, 0x1a, 0x0e, 0x69, 0xb4, 0x1a,
	0x15, 0xff, 0x5b, 0x8e, 0x78, 0x2d, 0x2b, 0xfc, 0x41, 0x0a, 0xf9, 0xa2, 0x25, 0x06, 0xfd, 0xfa,
	0x33, 0x2c, 0xdd, 0x1f, 0xb8, 0xa4, 0x4a, 0x48, 0x75, 0x85, 0xba, 0x91, 0x7b, 0x7c, 0xaf, 0x35,
	0x69, 0xff, 0xb5, 0x0b, 0x98, 0xde, 0xa8, 0xaf, 0x8a, 0xbe, 0xab, 0x64, 0xc0, 0x1e, 0xc1, 0x2c,
	0x57, 0x16, 0xb5, 0x12, 0x65, 0xf2, 0xf3, 0x15, 0x7b, 0x0a, 0x8f, 0x73, 0xd5, 0x88, 0x52, 0x1e,
	0xba, 0xab, 0x4d, 0xfe, 0xbc, 0x3c, 0xff, 0x35, 0x84, 0x27, 0x0f, 0x78, 0xec, 0x02, 0x66, 0xa1,
	0x1a, 0xec, 0x79, 0x7b, 0x65, 0xbd, 0x76, 0x2d, 0x4f, 0xfb, 0x76, 0xd7, 0xa0, 0x81, 0x0b, 0x87,
	0x1a, 0x84, 0x70, 0xaf, 0x53, 0x21, 0xdc, 0x6f, 0x4b, 0x36, 0xd8, 0x4d, 0x7c, 0xa9, 0xdf, 0xfe,
	0x0d, 0x00, 0x00, 0xff, 0xff, 0x74, 0x12, 0x74, 0x4d, 0xe8, 0x02, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// PortDomainServiceClient is the client API for PortDomainService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type PortDomainServiceClient interface {
	SavePort(ctx context.Context, in *SavePortRequest, opts ...grpc.CallOption) (*SavePortResponse, error)
	GetPorts(ctx context.Context, in *GetPortsRequest, opts ...grpc.CallOption) (*GetPortsResponse, error)
}

type portDomainServiceClient struct {
	cc *grpc.ClientConn
}

func NewPortDomainServiceClient(cc *grpc.ClientConn) PortDomainServiceClient {
	return &portDomainServiceClient{cc}
}

func (c *portDomainServiceClient) SavePort(ctx context.Context, in *SavePortRequest, opts ...grpc.CallOption) (*SavePortResponse, error) {
	out := new(SavePortResponse)
	err := c.cc.Invoke(ctx, "/port.PortDomainService/SavePort", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *portDomainServiceClient) GetPorts(ctx context.Context, in *GetPortsRequest, opts ...grpc.CallOption) (*GetPortsResponse, error) {
	out := new(GetPortsResponse)
	err := c.cc.Invoke(ctx, "/port.PortDomainService/GetPorts", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// PortDomainServiceServer is the server API for PortDomainService service.
type PortDomainServiceServer interface {
	SavePort(context.Context, *SavePortRequest) (*SavePortResponse, error)
	GetPorts(context.Context, *GetPortsRequest) (*GetPortsResponse, error)
}

func RegisterPortDomainServiceServer(s *grpc.Server, srv PortDomainServiceServer) {
	s.RegisterService(&_PortDomainService_serviceDesc, srv)
}

func _PortDomainService_SavePort_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(SavePortRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).SavePort(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortDomainService/SavePort",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).SavePort(ctx, req.(*SavePortRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _PortDomainService_GetPorts_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetPortsRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(PortDomainServiceServer).GetPorts(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/port.PortDomainService/GetPorts",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(PortDomainServiceServer).GetPorts(ctx, req.(*GetPortsRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _PortDomainService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "port.PortDomainService",
	HandlerType: (*PortDomainServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "SavePort",
			Handler:    _PortDomainService_SavePort_Handler,
		},
		{
			MethodName: "GetPorts",
			Handler:    _PortDomainService_GetPorts_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pb/port/pb.proto",
}
